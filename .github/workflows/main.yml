name: CI/CD

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23.3'
          check-latest: true

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build -o server cmd/main.go

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23.3'
          check-latest: true

      - name: install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23.3'
          check-latest: true

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build -o server cmd/main.go

      - name: Rename old binary
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{secrets.SERVER_USER}}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: cd Fanati-Elki-sem4 && mv server server_old

      - name: Push build data
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{secrets.SERVER_USER}}
          overwrite: true
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "server"
          target: /home/ubuntu/Fanati-Elki-sem4

      - name: Server up
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{secrets.SERVER_USER}}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |  
            cd Fanati-Elki-sem4
            pid=$(ss -tulpn | grep 8000 | awk -F'[=,]' '{print $3}')
            if [ -n "$pid" ]; then
            kill -9 $pid
            else
            echo "Процесс не найден."
            fi
            rm server_old
            nohup ./server > server.log 2>&1 &
